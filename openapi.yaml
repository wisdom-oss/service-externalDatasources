openapi: 3.1.0
info:
  title: External Datasource Service
  version: "0.1-alpha"
  description: |
    This microservice acts as central management for the used external data
    sources in the other microservices. It allows the creation of entries to
    document where the data displayed in the frontend comes from.
    
    Furthermore, this service also contains a proxy component which allows
    accessing external data sources which provide their data via HTTP APIs.
    Other methods are currently not supported, but might be implemented in
    the future.

servers:
  - url: "https://wisdom-demo.uol.de/api/external-data-sources/"
    description: Default API Base Path

paths:
  /{sourceID}:
    parameters:
      - in: path
        name: sourceID
        description: |
          The id of the external data source that was generated by the database
        style: simple
        schema:
          type:
            - string
          format: uuid
    get:
      summary: Get all available information about the data source
      responses:
        200:
          description: The full information about the data source

    post:
      summary: Create a new external data source

    put:
      summary: replace the current representation of the data source

    patch:
      summary: update the current representation of the data source

  /transformations/{sourceId}:
    parameters:
      - in: path
        name: sourceID
        description: |
          The id of the external data source that was generated by the database
        style: simple
        schema:
          type:
            - string
          format: uuid

    get:
      summary: get all transformations from the database

    post:
      summary: create a new transformation for the source

  /transformations/{sourceId}/{transformationId}:
    parameters:
      - in: path
        name: sourceID
        description: |
          The id of the external data source that was generated by the database
        style: simple
        schema:
          type:
            - string
          format: uuid

      - in: path
        name: transformationId
        description: |
          The id of the transformation generated by the database
        style: simple
        schema:
          type:
            - string
          format: uuid

    get:
      summary: get a transformation from the database

    put:
      summary: replace the transformation with the supplied representation

    patch:
      summary: update the transformation with the supplied representation

  /proxy/{sourceID}/{remotePath}:
    parameters:
      - in: path
        name: sourceID
        description: |
          The id of the external data source that was generated by the database
        style: simple
        schema:
          type:
            - string
          format: uuid
      - in: path
        name: remotePath
        description: |
          The remote path that is called on the external data source.
          
          This parameter is only listed as indicator that the service at least
          expects the trailing slash or more of the path. The path may
          contain query parameters.
        schema:
          type:
            - string
    get:
      summary: Request data from the data source
      description: |
        Since this endpoint is used to proxy a request to a external service
        the http status codes are also returned from the external response.
        Therefore, this documentation only lists those which may be sent back
        directly by the service
      responses:
        200:
          description: | 
            The data from the data source <br>
            **Important**: without creating transformations the content type
            will match the one received from the upstream response
        404:
          description: |
           No data source with this id found
        5XX:
          description: |
            Something went wrong while proxying the request
        502:
          description: |
            The external datasource is currently not available

